# The proguard configuration file for the following section is /Users/g.maz/Desktop/Knowledge/app/flavor2-rules.pro
# Add project specific ProGuard rules here.
# You can control the set of applied configuration files using the
# proguardFiles setting in build.gradle.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

# Uncomment this to preserve the line number information for
# debugging stack traces.
#-keepattributes SourceFile,LineNumberTable

# If you keep the line number information, uncomment this to
# hide the original source file name.
#-renamesourcefileattribute SourceFile

# You can specify any path and filename.
-printconfiguration ~/tmp/full-r8-config.txt
# End of content from /Users/g.maz/Desktop/Knowledge/app/flavor2-rules.pro
# The proguard configuration file for the following section is /Users/g.maz/Desktop/Knowledge/app/build/intermediates/default_proguard_files/global/proguard-android-optimize.txt-8.0.0
# This is a configuration file for ProGuard.
# http://proguard.sourceforge.net/index.html#manual/usage.html
#
# Starting with version 2.2 of the Android plugin for Gradle, this file is distributed together with
# the plugin and unpacked at build-time. The files in $ANDROID_HOME are no longer maintained and
# will be ignored by new version of the Android plugin for Gradle.

# Optimizations: If you don't want to optimize, use the proguard-android.txt configuration file
# instead of this one, which turns off the optimization flags.
# Adding optimization introduces certain risks, since for example not all optimizations performed by
# ProGuard works on all versions of Dalvik.  The following flags turn off various optimizations
# known to have issues, but the list may not be complete or up to date. (The "arithmetic"
# optimization can be used if you are only targeting Android 2.0 or later.)  Make sure you test
# thoroughly if you go this route.
-optimizations !code/simplification/arithmetic,!code/simplification/cast,!field/*,!class/merging/*
-optimizationpasses 5
-allowaccessmodification

-dontusemixedcaseclassnames
-dontskipnonpubliclibraryclasses
-verbose

# Preserve some attributes that may be required for reflection.
-keepattributes AnnotationDefault,
                EnclosingMethod,
                InnerClasses,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations,
                Signature

-keep public class com.google.vending.licensing.ILicensingService
-keep public class com.android.vending.licensing.ILicensingService
-keep public class com.google.android.vending.licensing.ILicensingService
-dontnote com.android.vending.licensing.ILicensingService
-dontnote com.google.vending.licensing.ILicensingService
-dontnote com.google.android.vending.licensing.ILicensingService

# For native methods, see http://proguard.sourceforge.net/manual/examples.html#native
-keepclasseswithmembernames,includedescriptorclasses class * {
    native <methods>;
}

# Keep setters in Views so that animations can still work.
-keepclassmembers public class * extends android.view.View {
    void set*(***);
    *** get*();
}

# We want to keep methods in Activity that could be used in the XML attribute onClick.
-keepclassmembers class * extends android.app.Activity {
    public void *(android.view.View);
}

# For enumeration classes, see http://proguard.sourceforge.net/manual/examples.html#enumerations
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-keepclassmembers class * implements android.os.Parcelable {
    public static final ** CREATOR;
}

# Preserve annotated Javascript interface methods.
-keepclassmembers class * {
    @android.webkit.JavascriptInterface <methods>;
}

# The support libraries contains references to newer platform versions.
# Don't warn about those in case this app is linking against an older
# platform version. We know about them, and they are safe.
-dontnote android.support.**
-dontnote androidx.**
-dontwarn android.support.**
-dontwarn androidx.**

# This class is deprecated, but remains for backward compatibility.
-dontwarn android.util.FloatMath

# Understand the @Keep support annotation.
-keep class android.support.annotation.Keep
-keep class androidx.annotation.Keep

-keep @android.support.annotation.Keep class * {*;}
-keep @androidx.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <init>(...);
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <init>(...);
}

# These classes are duplicated between android.jar and org.apache.http.legacy.jar.
-dontnote org.apache.http.**
-dontnote android.net.http.**

# These classes are duplicated between android.jar and core-lambda-stubs.jar.
-dontnote java.lang.invoke.**

# End of content from /Users/g.maz/Desktop/Knowledge/app/build/intermediates/default_proguard_files/global/proguard-android-optimize.txt-8.0.0
# The proguard configuration file for the following section is /Users/g.maz/Desktop/Knowledge/app/proguard-rules.pro
# Add project specific ProGuard rules here.
# You can control the set of applied configuration files using the
# proguardFiles setting in build.gradle.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

# Uncomment this to preserve the line number information for
# debugging stack traces.
#-keepattributes SourceFile,LineNumberTable

# If you keep the line number information, uncomment this to
# hide the original source file name.
#-renamesourcefileattribute SourceFile

# You can specify any path and filename.
-printconfiguration ~/tmp/full-r8-config.txt

# Please add these rules to your existing keep rules in order to suppress warnings.
# This is generated automatically by the Android Gradle plugin.
-dontwarn org.joda.convert.FromString
-dontwarn org.joda.convert.ToString
# End of content from /Users/g.maz/Desktop/Knowledge/app/proguard-rules.pro
# The proguard configuration file for the following section is /Users/g.maz/Desktop/Knowledge/app/build/intermediates/aapt_proguard_file/flavor2Release/aapt_rules.txt
-keep class androidx.core.app.CoreComponentFactory { <init>(); }
-keep class androidx.profileinstaller.ProfileInstallReceiver { <init>(); }
-keep class androidx.room.MultiInstanceInvalidationService { <init>(); }
-keep class androidx.startup.InitializationProvider { <init>(); }
-keep class androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity { <init>(); }
-keep class androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity { <init>(); }
-keep class androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity { <init>(); }
-keep class androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy { <init>(); }
-keep class androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy { <init>(); }
-keep class androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy { <init>(); }
-keep class androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy { <init>(); }
-keep class androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver { <init>(); }
-keep class androidx.work.impl.background.systemalarm.RescheduleReceiver { <init>(); }
-keep class androidx.work.impl.background.systemalarm.SystemAlarmService { <init>(); }
-keep class androidx.work.impl.background.systemjob.SystemJobService { <init>(); }
-keep class androidx.work.impl.diagnostics.DiagnosticsReceiver { <init>(); }
-keep class androidx.work.impl.foreground.SystemForegroundService { <init>(); }
-keep class androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver { <init>(); }
-keep class com.example.composemodule.ComposeActivity { <init>(); }
-keep class com.example.composemodule.jetnoteapp.JetNoteActivity { <init>(); }
-keep class com.example.composemodule.jettip.JetTipActivity { <init>(); }
-keep class com.example.composemodule.movieapp.MovieAppActivity { <init>(); }
-keep class com.example.composemodule.profile.ProfileActivity { <init>(); }
-keep class com.example.coroutines.CoroutineUsecasesOnAndroidApplication { <init>(); }
-keep class com.example.coroutines.CoroutinesActivity { <init>(); }
-keep class com.example.coroutines.base.UseCaseActivity { <init>(); }
-keep class com.example.coroutines.usecases.usecase1.PerformSingleNetworkRequestActivity { <init>(); }
-keep class com.example.coroutines.usecases.usecase10.CalculationInBackgroundActivity { <init>(); }
-keep class com.example.coroutines.usecases.usecase11.CooperativeCancellationActivity { <init>(); }
-keep class com.example.coroutines.usecases.usecase12.CalculationInSeveralCoroutinesActivity { <init>(); }
-keep class com.example.coroutines.usecases.usecase13.ExceptionHandlingActivity { <init>(); }
-keep class com.example.coroutines.usecases.usecase14.ContinueCoroutineWhenUserLeavesScreenActivity { <init>(); }
-keep class com.example.coroutines.usecases.usecase15.WorkManagerActivity { <init>(); }
-keep class com.example.coroutines.usecases.usecase16.PerformanceAnalysisActivity { <init>(); }
-keep class com.example.coroutines.usecases.usecase17.PerformCalculationOnMainThreadActivity { <init>(); }
-keep class com.example.coroutines.usecases.usecase2.Perform2SequentialNetworkRequestsActivity { <init>(); }
-keep class com.example.coroutines.usecases.usecase2.callbacks.SequentialNetworkRequestsCallbacksActivity { <init>(); }
-keep class com.example.coroutines.usecases.usecase2.rx.SequentialNetworkRequestsRxActivity { <init>(); }
-keep class com.example.coroutines.usecases.usecase3.PerformNetworkRequestsConcurrentlyActivity { <init>(); }
-keep class com.example.coroutines.usecases.usecase4.VariableAmountOfNetworkRequestsActivity { <init>(); }
-keep class com.example.coroutines.usecases.usecase5.NetworkRequestWithTimeoutActivity { <init>(); }
-keep class com.example.coroutines.usecases.usecase6.RetryNetworkRequestActivity { <init>(); }
-keep class com.example.coroutines.usecases.usecase7.TimeoutAndRetryActivity { <init>(); }
-keep class com.example.coroutines.usecases.usecase7.callbacks.TimeoutAndRetryCallbackActivity { <init>(); }
-keep class com.example.coroutines.usecases.usecase7.rx.TimeoutAndRetryRxActivity { <init>(); }
-keep class com.example.coroutines.usecases.usecase8.RoomAndCoroutinesActivity { <init>(); }
-keep class com.example.coroutines.usecases.usecase9.DebuggingCoroutinesActivity { <init>(); }
-keep class com.example.errorhandlermodule.ErrorHandlingMainActivity { <init>(); }
-keep class com.example.flowmodule.FlowActivity { <init>(); }
-keep class com.example.flowmodule.compare.FlowCompareActivity { <init>(); }
-keep class com.example.flowmodule.examples.FlowExample1Activity { <init>(); }
-keep class com.example.flowmodule.examples.FlowExample2Activity { <init>(); }
-keep class com.example.flowmodule.examples.FlowExample3Activity { <init>(); }
-keep class com.example.flowmodule.examples.FlowExample4Activity { <init>(); }
-keep class com.example.flowmodule.examples.FlowExample5Activity { <init>(); }
-keep class com.example.flowmodule.stockapp.usecase1.FlowUseCase1Activity { <init>(); }
-keep class com.example.flowmodule.stockapp.usecase2.FlowUseCase2Activity { <init>(); }
-keep class com.example.flowmodule.stockapp.usecase3.FlowUseCase3Activity { <init>(); }
-keep class com.example.flowmodule.stockapp.usecase4.FlowUseCase4Activity { <init>(); }
-keep class com.example.graphqlmodule.GraphQLMainActivity { <init>(); }
-keep class com.example.knowledge.MainActivity { <init>(); }
-keep class com.example.navigationcomponentmodule.NavigationComponentMainActivity { <init>(); }
-keep class android.widget.Space { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.app.AlertController$RecycleListView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.view.menu.ActionMenuItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.view.menu.ExpandedMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.view.menu.ListMenuItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionBarContainer { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionBarContextView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionBarOverlayLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActivityChooserView$InnerLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.AlertDialogLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.AppCompatButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ButtonBarLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ContentFrameLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.DialogTitle { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.FitWindowsFrameLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.FitWindowsLinearLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.LinearLayoutCompat { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.SearchView$SearchAutoComplete { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.Toolbar { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ViewStubCompat { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.cardview.widget.CardView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.constraintlayout.helper.widget.Flow { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.constraintlayout.widget.Barrier { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.constraintlayout.widget.ConstraintLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.core.widget.NestedScrollView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.fragment.app.FragmentContainerView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.navigation.fragment.NavHostFragment { <init>(); }

-keep class androidx.recyclerview.widget.RecyclerView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.example.composemodule.jettip.FirstFragment { <init>(...); }

-keep class com.example.composemodule.jettip.SecondFragment { <init>(...); }

-keep class com.example.graphqlmodule.LaunchDetailsFragment { <init>(...); }

-keep class com.example.graphqlmodule.LaunchListFragment { <init>(...); }

-keep class com.example.graphqlmodule.LoginFragment { <init>(...); }

-keep class com.example.navigationcomponentmodule.FirstFragment { <init>(...); }

-keep class com.example.navigationcomponentmodule.SecondFragment { <init>(...); }

-keep class com.google.android.material.appbar.MaterialToolbar { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.button.MaterialButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.button.MaterialButtonToggleGroup { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.chip.Chip { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.datepicker.MaterialCalendarGridView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.BaselineLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.CheckableImageButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.ClippableRoundedCornerLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.NavigationMenuItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.NavigationMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.TouchObserverFrameLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.snackbar.Snackbar$SnackbarLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.snackbar.SnackbarContentLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.textfield.TextInputEditText { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.textfield.TextInputLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.ChipTextInputComboView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.ClockFaceView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.ClockHandView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.TimePickerView { <init>(android.content.Context, android.util.AttributeSet); }


# End of content from /Users/g.maz/Desktop/Knowledge/app/build/intermediates/aapt_proguard_file/flavor2Release/aapt_rules.txt
# The proguard configuration file for the following section is /Users/g.maz/Desktop/Knowledge/ComposeModule/build/intermediates/consumer_proguard_dir/release/lib0/proguard.txt

# End of content from /Users/g.maz/Desktop/Knowledge/ComposeModule/build/intermediates/consumer_proguard_dir/release/lib0/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/Desktop/Knowledge/FlowModule/build/intermediates/consumer_proguard_dir/release/lib0/proguard.txt

# End of content from /Users/g.maz/Desktop/Knowledge/FlowModule/build/intermediates/consumer_proguard_dir/release/lib0/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/Desktop/Knowledge/CoroutinesModule/build/intermediates/consumer_proguard_dir/release/lib0/proguard.txt

# End of content from /Users/g.maz/Desktop/Knowledge/CoroutinesModule/build/intermediates/consumer_proguard_dir/release/lib0/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/Desktop/Knowledge/ErrorHandlerModule/build/intermediates/consumer_proguard_dir/release/lib0/proguard.txt

# End of content from /Users/g.maz/Desktop/Knowledge/ErrorHandlerModule/build/intermediates/consumer_proguard_dir/release/lib0/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/Desktop/Knowledge/GraphQLModule/build/intermediates/consumer_proguard_dir/release/lib0/proguard.txt

# End of content from /Users/g.maz/Desktop/Knowledge/GraphQLModule/build/intermediates/consumer_proguard_dir/release/lib0/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/Desktop/Knowledge/NavigationComponentModule/build/intermediates/consumer_proguard_dir/release/lib0/proguard.txt

# End of content from /Users/g.maz/Desktop/Knowledge/NavigationComponentModule/build/intermediates/consumer_proguard_dir/release/lib0/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/Desktop/Knowledge/CommonModule/build/intermediates/consumer_proguard_dir/release/lib0/proguard.txt

# End of content from /Users/g.maz/Desktop/Knowledge/CommonModule/build/intermediates/consumer_proguard_dir/release/lib0/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/2edcd72d977b287319f87cc86242f7c7/transformed/work-runtime-2.8.1/proguard.txt
-keep class * extends androidx.work.Worker
-keep class * extends androidx.work.InputMerger
# Keep all constructors on ListenableWorker, Worker
-keep public class * extends androidx.work.ListenableWorker {
    public <init>(...);
}
# We need to keep WorkerParameters for the ListenableWorker constructor
-keep class androidx.work.WorkerParameters

# End of content from /Users/g.maz/.gradle/caches/transforms-3/2edcd72d977b287319f87cc86242f7c7/transformed/work-runtime-2.8.1/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/8cde93c948a4da5c28f7ac11a460380b/transformed/room-runtime-2.5.2/proguard.txt
-keep class * extends androidx.room.RoomDatabase
-dontwarn androidx.room.paging.**

# End of content from /Users/g.maz/.gradle/caches/transforms-3/8cde93c948a4da5c28f7ac11a460380b/transformed/room-runtime-2.5.2/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/802713de03b41902dd05d2a9e8abe78b/transformed/navigation-ui-2.5.3/proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# setProgress is called via an ObjectAnimator in AbstractAppBarOnDestinationChangedListener
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawerArrowDrawable {
    void setProgress(float);
}

# End of content from /Users/g.maz/.gradle/caches/transforms-3/802713de03b41902dd05d2a9e8abe78b/transformed/navigation-ui-2.5.3/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/5a5fd7b6e93eb5f0115686c4367a4998/transformed/material-1.9.0/proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior
-keepattributes RuntimeVisible*Annotation*

# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# AppCompatViewInflater reads the viewInflaterClass theme attribute which then
# reflectively instantiates MaterialComponentsViewInflater using the no-argument
# constructor. We only need to keep this constructor and the class name if
# AppCompatViewInflater is also being kept.
-if class androidx.appcompat.app.AppCompatViewInflater
-keep class com.google.android.material.theme.MaterialComponentsViewInflater {
    <init>();
}


# End of content from /Users/g.maz/.gradle/caches/transforms-3/5a5fd7b6e93eb5f0115686c4367a4998/transformed/material-1.9.0/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/73777688963993afa72a6d8dc06a15ab/transformed/appcompat-1.6.1/proguard.txt
# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# aapt is not able to read app::actionViewClass and app:actionProviderClass to produce proguard
# keep rules. Add a commonly used SearchView to the keep list until b/109831488 is resolved.
-keep class androidx.appcompat.widget.SearchView { <init>(...); }

# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl* {
  <methods>;
}

# End of content from /Users/g.maz/.gradle/caches/transforms-3/73777688963993afa72a6d8dc06a15ab/transformed/appcompat-1.6.1/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/e607d4ac3b359c61dcb8667df040c21e/transformed/recyclerview-1.3.0/proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# When layoutManager xml attribute is used, RecyclerView inflates
#LayoutManagers' constructors using reflection.
-keep public class * extends androidx.recyclerview.widget.RecyclerView$LayoutManager {
    public <init>(android.content.Context, android.util.AttributeSet, int, int);
    public <init>();
}

-keepclassmembers class androidx.recyclerview.widget.RecyclerView {
    public void suppressLayout(boolean);
    public boolean isLayoutSuppressed();
}
# End of content from /Users/g.maz/.gradle/caches/transforms-3/e607d4ac3b359c61dcb8667df040c21e/transformed/recyclerview-1.3.0/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/8fb1c599be00921fd814610b78473505/transformed/fragment-1.5.4/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The default FragmentFactory creates Fragment instances using reflection
-if public class ** extends androidx.fragment.app.Fragment
-keepclasseswithmembers,allowobfuscation public class <1> {
    public <init>();
}

# End of content from /Users/g.maz/.gradle/caches/transforms-3/8fb1c599be00921fd814610b78473505/transformed/fragment-1.5.4/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/f420eba1cbb7d2b3d23a10e2ea5824b7/transformed/navigation-common-2.5.3/proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NavArgsLazy creates NavArgs instances using reflection
-if public class ** implements androidx.navigation.NavArgs
-keepclassmembers public class <1> {
    ** fromBundle(android.os.Bundle);
}

# Retain the @Navigator.Name annotation on each subclass of Navigator.
# R8 full mode only retains annotations on items matched by a -keep rule,
# hence the extra -keep rule for the subclasses of Navigator.
#
# A -keep rule for the Navigator.Name annotation class is not required
# since the annotation is referenced from the code.
-keepattributes RuntimeVisibleAnnotations
-keep,allowobfuscation,allowshrinking class * extends androidx.navigation.Navigator

# End of content from /Users/g.maz/.gradle/caches/transforms-3/f420eba1cbb7d2b3d23a10e2ea5824b7/transformed/navigation-common-2.5.3/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/d2ffb7b21e93a014e99d43e9f9f0b7fd/transformed/savedstate-1.2.1/proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

-keepclassmembers,allowobfuscation class * implements androidx.savedstate.SavedStateRegistry$AutoRecreated {
    <init>();
}

# End of content from /Users/g.maz/.gradle/caches/transforms-3/d2ffb7b21e93a014e99d43e9f9f0b7fd/transformed/savedstate-1.2.1/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/4076eaa405950f8a315a9ab0d037d761/transformed/lifecycle-process-2.6.1/proguard.txt
# this rule is need to work properly when app is compiled with api 28, see b/142778206
-keepclassmembers class * extends androidx.lifecycle.EmptyActivityLifecycleCallbacks { *; }
# End of content from /Users/g.maz/.gradle/caches/transforms-3/4076eaa405950f8a315a9ab0d037d761/transformed/lifecycle-process-2.6.1/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/6591b2c41261b4fea676886e9629b6a0/transformed/lifecycle-viewmodel-savedstate-2.6.1/proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>(androidx.lifecycle.SavedStateHandle);
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application,androidx.lifecycle.SavedStateHandle);
}

# End of content from /Users/g.maz/.gradle/caches/transforms-3/6591b2c41261b4fea676886e9629b6a0/transformed/lifecycle-viewmodel-savedstate-2.6.1/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/fbbddd24ac6cbac80dbe4d36ba8355cf/transformed/lifecycle-viewmodel-2.6.1/proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>();
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application);
}

# End of content from /Users/g.maz/.gradle/caches/transforms-3/fbbddd24ac6cbac80dbe4d36ba8355cf/transformed/lifecycle-viewmodel-2.6.1/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/02b7e0c663cf4a41709805d0a417ed91/transformed/ui-1.4.3/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# We supply these as stubs and are able to link to them at runtime
# because they are hidden public classes in Android. We don't want
# R8 to complain about them not being there during optimization.
-dontwarn android.view.RenderNode
-dontwarn android.view.DisplayListCanvas

-keepclassmembers class androidx.compose.ui.platform.ViewLayerContainer {
    protected void dispatchGetDisplayList();
}

-keepclassmembers class androidx.compose.ui.platform.AndroidComposeView {
    android.view.View findViewByAccessibilityIdTraversal(int);
}

# Users can create Modifier.Node instances that implement multiple Modifier.Node interfaces,
# so we cannot tell whether two modifier.node instances are of the same type without using
# reflection to determine the class type. See b/265188224 for more context.
-keep,allowshrinking class * extends androidx.compose.ui.node.ModifierNodeElement

# End of content from /Users/g.maz/.gradle/caches/transforms-3/02b7e0c663cf4a41709805d0a417ed91/transformed/ui-1.4.3/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/7e77b961c7e138870f877680909f7281/transformed/coordinatorlayout-1.1.0/proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior and ViewPager's DecorView
-keepattributes *Annotation*

# End of content from /Users/g.maz/.gradle/caches/transforms-3/7e77b961c7e138870f877680909f7281/transformed/coordinatorlayout-1.1.0/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/9ae7625c13d1b401ce33ae55ee026ebc/transformed/vectordrawable-animated-1.1.0/proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# keep setters in VectorDrawables so that animations can still work.
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$* {
   void set*(***);
   *** get*();
}

# End of content from /Users/g.maz/.gradle/caches/transforms-3/9ae7625c13d1b401ce33ae55ee026ebc/transformed/vectordrawable-animated-1.1.0/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/c2aab714c68974f663c7a284c526bdba/transformed/transition-1.4.1/proguard.txt
# Copyright (C) 2017 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep a field in transition that is used to keep a reference to weakly-referenced object
-keepclassmembers class androidx.transition.ChangeBounds$* extends android.animation.AnimatorListenerAdapter {
  androidx.transition.ChangeBounds$ViewBounds mViewBounds;
}

# End of content from /Users/g.maz/.gradle/caches/transforms-3/c2aab714c68974f663c7a284c526bdba/transformed/transition-1.4.1/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/29eedcaf0116f6e106f3202cf49a8e90/transformed/window-1.0.0/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# A rule that will keep classes that implement SidecarInterface$SidecarCallback if Sidecar seems
# be used. See b/157286362 and b/165268619 for details.
# TODO(b/208543178) investigate how to pass header jar to R8 so we don't need this rule
-if class androidx.window.layout.SidecarCompat {
  public setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface);
}
-keep class androidx.window.layout.SidecarCompat$TranslatingCallback,
 androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback {
  public onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState);
  public onWindowLayoutChanged(android.os.IBinder, androidx.window.sidecar.SidecarWindowLayoutInfo);
}
# End of content from /Users/g.maz/.gradle/caches/transforms-3/29eedcaf0116f6e106f3202cf49a8e90/transformed/window-1.0.0/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/6e08a75731cd95931d16e65ee0c3e716/transformed/core-1.10.1/proguard.txt
# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.ViewCompat$Api* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.WindowInsetsCompat$*Impl* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.app.NotificationCompat$*$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.os.UserHandleCompat$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.widget.EdgeEffectCompat$Api*Impl {
  <methods>;
}

# End of content from /Users/g.maz/.gradle/caches/transforms-3/6e08a75731cd95931d16e65ee0c3e716/transformed/core-1.10.1/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/2d97de96aaf9aa1370ca5cd6aae7bf3b/transformed/lifecycle-runtime-2.6.1/proguard.txt
-keepattributes AnnotationDefault,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations

-keepclassmembers enum androidx.lifecycle.Lifecycle$Event {
    <fields>;
}

-keep !interface * implements androidx.lifecycle.LifecycleObserver {
}

-keep class * implements androidx.lifecycle.GeneratedAdapter {
    <init>(...);
}

-keepclassmembers class ** {
    @androidx.lifecycle.OnLifecycleEvent *;
}

# this rule is need to work properly when app is compiled with api 28, see b/142778206
# Also this rule prevents registerIn from being inlined.
-keepclassmembers class androidx.lifecycle.ReportFragment$LifecycleCallbacks { *; }
# End of content from /Users/g.maz/.gradle/caches/transforms-3/2d97de96aaf9aa1370ca5cd6aae7bf3b/transformed/lifecycle-runtime-2.6.1/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/bcff1ce18c76460d4ecb53abe2ecf123/transformed/runtime-1.4.3/proguard.txt
-assumenosideeffects public class androidx.compose.runtime.ComposerKt {
    void sourceInformation(androidx.compose.runtime.Composer,java.lang.String);
    void sourceInformationMarkerStart(androidx.compose.runtime.Composer,int,java.lang.String);
    void sourceInformationMarkerEnd(androidx.compose.runtime.Composer);
}

# End of content from /Users/g.maz/.gradle/caches/transforms-3/bcff1ce18c76460d4ecb53abe2ecf123/transformed/runtime-1.4.3/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/fedfb75d134fe08d7bf5229c9ac12718/transformed/rules/lib/META-INF/proguard/coroutines.pro
# ServiceLoader support
-keepnames class kotlinx.coroutines.test.internal.TestMainDispatcherFactory {}
-keepnames class kotlinx.coroutines.android.AndroidExceptionPreHandler {}
-keepnames class kotlinx.coroutines.android.AndroidDispatcherFactory {}

# Most of volatile fields are updated with AFU and should not be mangled
-keepclassmembers class kotlinx.coroutines.** {
    volatile <fields>;
}

# End of content from /Users/g.maz/.gradle/caches/transforms-3/fedfb75d134fe08d7bf5229c9ac12718/transformed/rules/lib/META-INF/proguard/coroutines.pro
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/2553a92fe1c2ca9f5da9de1fc2cd2151/transformed/rules/lib/META-INF/com.android.tools/r8/coroutines.pro
# When editing this file, update the following files as well:
# - META-INF/proguard/coroutines.pro
# - META-INF/com.android.tools/proguard/coroutines.pro

# Most of volatile fields are updated with AFU and should not be mangled
-keepclassmembers class kotlinx.coroutines.** {
    volatile <fields>;
}

# Same story for the standard library's SafeContinuation that also uses AtomicReferenceFieldUpdater
-keepclassmembers class kotlin.coroutines.SafeContinuation {
    volatile <fields>;
}

# These classes are only required by kotlinx.coroutines.debug.AgentPremain, which is only loaded when
# kotlinx-coroutines-core is used as a Java agent, so these are not needed in contexts where ProGuard is used.
-dontwarn java.lang.instrument.ClassFileTransformer
-dontwarn sun.misc.SignalHandler
-dontwarn java.lang.instrument.Instrumentation
-dontwarn sun.misc.Signal

# Only used in `kotlinx.coroutines.internal.ExceptionsConstructor`.
# The case when it is not available is hidden in a `try`-`catch`, as well as a check for Android.
-dontwarn java.lang.ClassValue

# An annotation used for build tooling, won't be directly accessed.
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
# End of content from /Users/g.maz/.gradle/caches/transforms-3/2553a92fe1c2ca9f5da9de1fc2cd2151/transformed/rules/lib/META-INF/com.android.tools/r8/coroutines.pro
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/e842b307afea680ab093ea8dacfabdc9/transformed/rules/lib/META-INF/com.android.tools/r8-from-1.6.0/coroutines.pro
# Allow R8 to optimize away the FastServiceLoader.
# Together with ServiceLoader optimization in R8
# this results in direct instantiation when loading Dispatchers.Main
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatcherLoader {
    boolean FAST_SERVICE_LOADER_ENABLED return false;
}

-assumenosideeffects class kotlinx.coroutines.internal.FastServiceLoaderKt {
    boolean ANDROID_DETECTED return true;
}

# Disable support for "Missing Main Dispatcher", since we always have Android main dispatcher
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatchersKt {
    boolean SUPPORT_MISSING return false;
}

# Statically turn off all debugging facilities and assertions
-assumenosideeffects class kotlinx.coroutines.DebugKt {
    boolean getASSERTIONS_ENABLED() return false;
    boolean getDEBUG() return false;
    boolean getRECOVER_STACK_TRACES() return false;
}

# End of content from /Users/g.maz/.gradle/caches/transforms-3/e842b307afea680ab093ea8dacfabdc9/transformed/rules/lib/META-INF/com.android.tools/r8-from-1.6.0/coroutines.pro
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/14d2a2fd687aca94af6ca480663e6551/transformed/rules/lib/META-INF/proguard/retrofit2.pro
# Retrofit does reflection on generic parameters. InnerClasses is required to use Signature and
# EnclosingMethod is required to use InnerClasses.
-keepattributes Signature, InnerClasses, EnclosingMethod

# Retrofit does reflection on method and parameter annotations.
-keepattributes RuntimeVisibleAnnotations, RuntimeVisibleParameterAnnotations

# Retain service method parameters when optimizing.
-keepclassmembers,allowshrinking,allowobfuscation interface * {
    @retrofit2.http.* <methods>;
}

# Ignore annotation used for build tooling.
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement

# Ignore JSR 305 annotations for embedding nullability information.
-dontwarn javax.annotation.**

# Guarded by a NoClassDefFoundError try/catch and only used when on the classpath.
-dontwarn kotlin.Unit

# Top-level functions that can only be used by Kotlin.
-dontwarn retrofit2.KotlinExtensions
-dontwarn retrofit2.KotlinExtensions$*

# With R8 full mode, it sees no subtypes of Retrofit interfaces since they are created with a Proxy
# and replaces all potential values with null. Explicitly keeping the interfaces prevents this.
-if interface * { @retrofit2.http.* <methods>; }
-keep,allowobfuscation interface <1>

# End of content from /Users/g.maz/.gradle/caches/transforms-3/14d2a2fd687aca94af6ca480663e6551/transformed/rules/lib/META-INF/proguard/retrofit2.pro
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/aac7993f41f7ddda0ac370a7a2389c5f/transformed/rules/lib/META-INF/proguard/okhttp3.pro
# JSR 305 annotations are for embedding nullability information.
-dontwarn javax.annotation.**

# A resource is loaded with a relative path so the package of this class must be preserved.
-keepnames class okhttp3.internal.publicsuffix.PublicSuffixDatabase

# Animal Sniffer compileOnly dependency to ensure APIs are compatible with older versions of Java.
-dontwarn org.codehaus.mojo.animal_sniffer.*

# OkHttp platform used only on JVM and when Conscrypt and other security providers are available.
-dontwarn okhttp3.internal.platform.**
-dontwarn org.conscrypt.**
-dontwarn org.bouncycastle.**
-dontwarn org.openjsse.**

# End of content from /Users/g.maz/.gradle/caches/transforms-3/aac7993f41f7ddda0ac370a7a2389c5f/transformed/rules/lib/META-INF/proguard/okhttp3.pro
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/12534291f171f62efc1a430966aa73fd/transformed/rules/lib/META-INF/proguard/okio.pro
# Animal Sniffer compileOnly dependency to ensure APIs are compatible with older versions of Java.
-dontwarn org.codehaus.mojo.animal_sniffer.*

# End of content from /Users/g.maz/.gradle/caches/transforms-3/12534291f171f62efc1a430966aa73fd/transformed/rules/lib/META-INF/proguard/okio.pro
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/248c8614170ce46130a5392281cf0448/transformed/monitor-1.6.1/proguard.txt
# Proguard flags for the AndroidJUnitRunner library.

# avoid obfuscation of the instrumentation runners and orchestrator
-keepnames class androidx.test.**

# Annotation classes accessed via reflection
-keep class androidx.test.annotation.** { *; }

# for 'can't find referenced method 'android.app.Instrumentation$ActivityResult execStartActivity' etc
-dontwarn androidx.test.runner.MonitoringInstrumentation

# for class com.google.errorprone.annotations.InlineMe is not in the runtime classpath
-dontwarn com.google.errorprone.annotations.InlineMe
# End of content from /Users/g.maz/.gradle/caches/transforms-3/248c8614170ce46130a5392281cf0448/transformed/monitor-1.6.1/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/c5ff2754f8416fa67768df26a2d4e4b2/transformed/versionedparcelable-1.1.1/proguard.txt
-keep class * implements androidx.versionedparcelable.VersionedParcelable
-keep public class android.support.**Parcelizer { *; }
-keep public class androidx.**Parcelizer { *; }
-keep public class androidx.versionedparcelable.ParcelImpl

# End of content from /Users/g.maz/.gradle/caches/transforms-3/c5ff2754f8416fa67768df26a2d4e4b2/transformed/versionedparcelable-1.1.1/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/a5cee8e7dae523cdd2644b873aa0a893/transformed/startup-runtime-1.1.1/proguard.txt
# It's important that we preserve initializer names, given they are used in the AndroidManifest.xml.
-keepnames class * extends androidx.startup.Initializer

# These Proguard rules ensures that ComponentInitializers are are neither shrunk nor obfuscated,
# and are a part of the primary dex file. This is because they are discovered and instantiated
# during application startup.
-keep class * extends androidx.startup.Initializer {
    # Keep the public no-argument constructor while allowing other methods to be optimized.
    <init>();
}

-assumenosideeffects class androidx.startup.StartupLogger { public static <methods>; }

# End of content from /Users/g.maz/.gradle/caches/transforms-3/a5cee8e7dae523cdd2644b873aa0a893/transformed/startup-runtime-1.1.1/proguard.txt
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/33e25d513f03029dfc16be82e48ff217/transformed/rules/lib/META-INF/proguard/androidx-annotations.pro
-keep,allowobfuscation @interface androidx.annotation.Keep
-keep @androidx.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <init>(...);
}

-keepclassmembers,allowobfuscation class * {
  @androidx.annotation.DoNotInline <methods>;
}

# End of content from /Users/g.maz/.gradle/caches/transforms-3/33e25d513f03029dfc16be82e48ff217/transformed/rules/lib/META-INF/proguard/androidx-annotations.pro
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/84f5985fa5f9611b36be90fdf415a640/transformed/rules/lib/META-INF/proguard/protobuf.pro
# Recently Protobuf Javalite introduced a change that relies on reflection,
# which doesn't work with Proguard. This rule keeps the reflection usages in
# (shaded) Protobuf classes in Tink as-is.
# The location of this file is determined by
# - https://developer.android.com/studio/build/shrink-code#configuration-files
# - https://docs.bazel.build/versions/master/be/java.html#java_library.resources
# See also:
# - https://github.com/google/tink/issues/361
# - https://github.com/protocolbuffers/protobuf/issues/6463
# WARNING: the shaded package name com.google.crypto.tink.shaded.protobuf must
# be kept in sync with jar_jar_rules.txt.
-keepclassmembers class * extends com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite {
  <fields>;
}

# End of content from /Users/g.maz/.gradle/caches/transforms-3/84f5985fa5f9611b36be90fdf415a640/transformed/rules/lib/META-INF/proguard/protobuf.pro
# The proguard configuration file for the following section is /Users/g.maz/.gradle/caches/transforms-3/975f806b988a194dc4a552ce4b53df28/transformed/rules/lib/META-INF/proguard/rxjava2.pro
-dontwarn java.util.concurrent.Flow*
# End of content from /Users/g.maz/.gradle/caches/transforms-3/975f806b988a194dc4a552ce4b53df28/transformed/rules/lib/META-INF/proguard/rxjava2.pro
# The proguard configuration file for the following section is <unknown>

# End of content from <unknown>